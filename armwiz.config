#!/bin/sh

function setTargetParametersFromList () {
	# Sets the target parameters according to --target <targetname>
	# takes targetname as input
	# Called by setTarterParameters()

	# To generate a list of mbed linker scripts:
	# clear;find mbed/libraries/mbed/targets/cmsis/TARGET_STM -name '*.ld'

	# To generate a list of mbed targets:
	# clear;find mbed/libraries/mbed/targets/cmsis/TARGET_STM -name '*.ld' -exec basename {} \;


MBED_TARGET_MANUFACTURER=""
MBED_TARGET_FAMILY=""
MBED_TARGET_CMSIS=""
MBED_TARGET_HAL=""
MBED_TOOLCHAIN=""
MBED_TARGET_LINKER_SCRIPT=""

    case $1 in
        stm32f3 )
            MBED_TARGET_MANUFACTURER="TARGET_STM"
            MBED_TARGET_FAMILY="TARGET_STM32F3"
            MBED_TARGET_CMSIS="TARGET_STM32F3"
            MBED_TARGET_HAL="TARGET_STM32F3"
            MBED_TOOLCHAIN="TOOLCHAIN_GCC_ARM"
          	MBED_TARGET_LINKER_SCRIPT="STM32F3XX.ld"
           	;;
        elmo-f411re )
            MBED_TARGET_MANUFACTURER="TARGET_STM"
            MBED_TARGET_FAMILY="TARGET_STM32F4"
            MBED_TARGET_CMSIS="TARGET_ELMO_F411RE"
            MBED_TARGET_HAL="TARGET_ELMO_F411RE"
            MBED_TOOLCHAIN="TOOLCHAIN_GCC_ARM"
          	MBED_TARGET_LINKER_SCRIPT="STM32F411XE.ld"
           	;;
        mts-dragonfly-f411re )
            MBED_TARGET_MANUFACTURER="TARGET_STM"
            MBED_TARGET_FAMILY="TARGET_STM32F4"
            MBED_TARGET_CMSIS="TARGET_MTS_DRAGONFLY_F411RE"
            MBED_TARGET_HAL="TARGET_MTS_DRAGONFLY_F411RE"
            MBED_TOOLCHAIN="TOOLCHAIN_GCC_ARM"
          	MBED_TARGET_LINKER_SCRIPT="NUCLEO_F411RE.ld"
           	;;
        mts-mdot-f411re )
            MBED_TARGET_MANUFACTURER="TARGET_STM"
            MBED_TARGET_FAMILY="TARGET_STM32F4"
            MBED_TARGET_CMSIS="TARGET_MTS_MDOT_F411RE"
            MBED_TARGET_HAL="TARGET_MTS_MDOT_F411RE"
            MBED_TOOLCHAIN="TOOLCHAIN_GCC_ARM"
          	MBED_TARGET_LINKER_SCRIPT="STM32F411XE.ld"
           	;;
        nucleo-f411re )
            MBED_TARGET_MANUFACTURER="TARGET_STM"
            MBED_TARGET_FAMILY="TARGET_STM32F4"
            MBED_TARGET_CMSIS="TARGET_NUCLEO_F411RE"
            MBED_TARGET_HAL="TARGET_NUCLEO_F411RE"
            MBED_TOOLCHAIN="TOOLCHAIN_GCC_ARM"
          	MBED_TARGET_LINKER_SCRIPT="STM32F411XE.ld"
           	;;
        stm32f407vg | stm32f4-discovery )
            MBED_TARGET_MANUFACTURER="TARGET_STM"
            MBED_TARGET_FAMILY="TARGET_STM32F4"
            MBED_TARGET_CMSIS="TARGET_STM32F407VG"
            MBED_TARGET_HAL="TARGET_DISCO_F407VG"
            MBED_TOOLCHAIN="TOOLCHAIN_GCC_ARM"
          	MBED_TARGET_LINKER_SCRIPT="STM32F407XG.ld"
            GCC_MCFLAGS="-mcpu=cortex-m4 -mthumb -mlittle-endian -mfpu=fpv4-sp-d16 -mfloat-abi=hard -mthumb-interwork"
            GCC_COMPILE_FLAGS_DEFS="-DTARGET_STM32F407 -D__CORTEX_M4 -D__FPU_PRESENT -DWORDS_STACK_SIZE=200"
            GCC_COMPILE_FLAGS_CFLAGS="-c \$(MCFLAGS) \$(DEFS) \$(INCLUDES) -std=c99"
            GCC_COMPILE_FLAGS_CXXFLAGS="-c \$(MCFLAGS) \$(DEFS) \$(INCLUDES) -std=c++11"
            GCC_COMPILE_FLAGS_CXXFLAGS+=" -U__STRICT_ANSI__"  # Undefine __STRICT_ANSI__ to compile Stream.cpp using c++11. This is a dirty hack!
            GCC_LINKER_FLAGS="-T \$(LDSCRIPT) \$(MCFLAGS) --specs=nosys.specs \$(INCLUDES_LIBS) \$(LINK_LIBS)"
            OPENOCD_BOARD_CONFIG_FILE="board/stm32f4discovery.cfg"
           	;;
        stm32f4 )
            MBED_TARGET_MANUFACTURER="TARGET_STM"
            MBED_TARGET_FAMILY="TARGET_STM32F4"
            MBED_TARGET_CMSIS="TARGET_STM32F4"
            MBED_TARGET_HAL="TARGET_STM32F4"
            MBED_TOOLCHAIN="TOOLCHAIN_GCC_ARM"
          	MBED_TARGET_LINKER_SCRIPT="STM32F407.ld"
           	;;
        * )
    esac
}
